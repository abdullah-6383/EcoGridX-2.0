{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/Jisnu/ecogridx-web/components/demo/AIOptimizer.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\n\nexport default function AIOptimizer() {\n  const [selectedAction, setSelectedAction] = useState<string | null>(null);\n  const [executingAction, setExecutingAction] = useState<string | null>(null);\n  const [editingTarget, setEditingTarget] = useState(false);\n  const [tempTargetLoad, setTempTargetLoad] = useState(2800);\n  const [editingZone, setEditingZone] = useState<number | null>(null);\n  const [tempZoneLoad, setTempZoneLoad] = useState<number>(0);\n  const [executionHistory, setExecutionHistory] = useState<Array<{\n    id: number;\n    zone: string;\n    timestamp: Date;\n    loadChange: number;\n    success: boolean;\n    rewardImpact: number;\n  }>>([]);\n  const [modelMetrics, setModelMetrics] = useState({\n    policyLoss: 0.023,\n    valueLoss: 0.015,\n    entropy: 0.891,\n    successRate: 91.5,\n    totalExecutions: 0,\n    successfulExecutions: 0,\n    totalRewardGain: 0\n  });\n  const [loadBalanceData, setLoadBalanceData] = useState({\n    currentLoad: 2650,\n    targetLoad: 2800,\n    recommendations: [\n      { id: 1, zone: 'North Grid', currentLoad: 890, recommendedLoad: 950, priority: 'High', status: 'pending' },\n      { id: 2, zone: 'South Grid', currentLoad: 720, recommendedLoad: 680, priority: 'Medium', status: 'pending' },\n      { id: 3, zone: 'East Grid', currentLoad: 640, recommendedLoad: 720, priority: 'High', status: 'pending' },\n      { id: 4, zone: 'West Grid', currentLoad: 400, recommendedLoad: 450, priority: 'Low', status: 'pending' },\n    ]\n  });\n\n  const executeLoadBalancing = async (recommendationId: number) => {\n    setExecutingAction(`load-${recommendationId}`);\n    const recommendation = loadBalanceData.recommendations.find(r => r.id === recommendationId);\n    if (!recommendation) return;\n\n    // Simulate execution time\n    setTimeout(() => {\n      setLoadBalanceData(prev => ({\n        ...prev,\n        recommendations: prev.recommendations.map(rec => \n          rec.id === recommendationId \n            ? { ...rec, status: 'executing' }\n            : rec\n        )\n      }));\n\n      // Complete execution after 3 seconds\n      setTimeout(() => {\n        const loadChange = recommendation.recommendedLoad - recommendation.currentLoad;\n        const success = Math.random() > 0.1; // 90% success rate\n        const rewardImpact = success ? Math.abs(loadChange) * 0.01 : -Math.abs(loadChange) * 0.005;\n\n        // Update load balancing data\n        setLoadBalanceData(prev => ({\n          ...prev,\n          currentLoad: prev.currentLoad + (success ? loadChange : loadChange * 0.5),\n          recommendations: prev.recommendations.map(rec => \n            rec.id === recommendationId \n              ? { ...rec, status: success ? 'completed' : 'failed', currentLoad: success ? rec.recommendedLoad : rec.currentLoad + (loadChange * 0.5) }\n              : rec\n          )\n        }));\n\n        // Add to execution history\n        setExecutionHistory(prev => [...prev, {\n          id: recommendationId,\n          zone: recommendation.zone,\n          timestamp: new Date(),\n          loadChange: success ? loadChange : loadChange * 0.5,\n          success,\n          rewardImpact\n        }]);\n\n        // Update model metrics\n        setModelMetrics(prev => ({\n          ...prev,\n          totalExecutions: prev.totalExecutions + 1,\n          successfulExecutions: prev.successfulExecutions + (success ? 1 : 0),\n          successRate: ((prev.successfulExecutions + (success ? 1 : 0)) / (prev.totalExecutions + 1)) * 100,\n          totalRewardGain: prev.totalRewardGain + rewardImpact,\n          policyLoss: Math.max(0.001, prev.policyLoss + (success ? -0.001 : 0.002)),\n          valueLoss: Math.max(0.001, prev.valueLoss + (success ? -0.001 : 0.002)),\n          entropy: Math.min(1.0, prev.entropy + (success ? 0.01 : -0.01))\n        }));\n\n        setExecutingAction(null);\n        setSelectedAction(null);\n      }, 3000);\n    }, 500);\n  };\n\n  const executeAllHighPriority = async () => {\n    const highPriorityRecs = loadBalanceData.recommendations.filter(rec => rec.priority === 'High' && rec.status === 'pending');\n    \n    for (const rec of highPriorityRecs) {\n      await executeLoadBalancing(rec.id);\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Delay between executions\n    }\n  };\n\n  const simulateLoadBalancing = () => {\n    // Simulate all recommendations without actually executing\n    const totalAdjustment = loadBalanceData.recommendations.reduce((sum, rec) => sum + (rec.recommendedLoad - rec.currentLoad), 0);\n    const newCurrentLoad = loadBalanceData.currentLoad + totalAdjustment;\n    \n    alert(`Simulation Results:\\nCurrent Load: ${loadBalanceData.currentLoad} MW\\nAfter Balancing: ${newCurrentLoad} MW\\nTotal Adjustment: ${totalAdjustment > 0 ? '+' : ''}${totalAdjustment} MW\\n\\nEstimated completion time: ${Math.max(...loadBalanceData.recommendations.map(rec => Math.floor(Math.abs(rec.recommendedLoad - rec.currentLoad) / 10)))} minutes`);\n  };\n\n  const handleTargetEdit = () => {\n    setTempTargetLoad(loadBalanceData.targetLoad);\n    setEditingTarget(true);\n  };\n\n  const handleTargetSave = () => {\n    if (tempTargetLoad >= 1000 && tempTargetLoad <= 5000) {\n      setLoadBalanceData(prev => ({\n        ...prev,\n        targetLoad: tempTargetLoad\n      }));\n      setEditingTarget(false);\n    }\n  };\n\n  const handleTargetCancel = () => {\n    setTempTargetLoad(loadBalanceData.targetLoad);\n    setEditingTarget(false);\n  };\n\n  const handleZoneEdit = (zoneId: number, currentLoad: number) => {\n    setTempZoneLoad(currentLoad);\n    setEditingZone(zoneId);\n  };\n\n  const handleZoneSave = (zoneId: number) => {\n    if (tempZoneLoad >= 100 && tempZoneLoad <= 1500) {\n      setLoadBalanceData(prev => ({\n        ...prev,\n        recommendations: prev.recommendations.map(rec => \n          rec.id === zoneId \n            ? { ...rec, recommendedLoad: tempZoneLoad }\n            : rec\n        )\n      }));\n      setEditingZone(null);\n    }\n  };\n\n  const handleZoneCancel = () => {\n    setEditingZone(null);\n    setTempZoneLoad(0);\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold mb-2\">\n          <span className=\"bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            AI Optimizer\n          </span>\n        </h1>\n        <p className=\"text-gray-400\">Intelligent grid optimization using reinforcement learning algorithms</p>\n      </div>\n\n      {/* AI Status Banner */}\n      <div className=\"mb-8\">\n        <div className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-4 h-4 bg-purple-400 rounded-full animate-pulse\"></div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-white\">AI Engine Status: Active</h3>\n                <p className=\"text-sm text-gray-400\">PPO algorithm optimizing grid operations</p>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-2xl font-bold text-purple-400\">97.3%</div>\n              <div className=\"text-sm text-gray-400\">Model Confidence</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* AI Optimization Dashboard */}\n      <div className=\"space-y-8\">\n        {/* Key AI Metrics Cards */}\n        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\n          <div className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-4\">\n            <div className=\"flex items-center space-x-3 mb-2\">\n              <div className=\"w-3 h-3 bg-purple-400 rounded-full\"></div>\n              <span className=\"text-sm text-gray-400\">Training Steps</span>\n            </div>\n            <div className=\"text-2xl font-bold text-purple-400\">2.1M</div>\n            <div className=\"text-xs text-gray-500\">Episodes completed</div>\n          </div>\n          \n          <div className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-4\">\n            <div className=\"flex items-center space-x-3 mb-2\">\n              <div className=\"w-3 h-3 bg-emerald-400 rounded-full\"></div>\n              <span className=\"text-sm text-gray-400\">Current Reward</span>\n            </div>\n            <div className=\"text-2xl font-bold text-emerald-400\">0.847</div>\n            <div className=\"text-xs text-gray-500\">Optimization score</div>\n          </div>\n          \n          <div className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-4\">\n            <div className=\"flex items-center space-x-3 mb-2\">\n              <div className=\"w-3 h-3 bg-cyan-400 rounded-full\"></div>\n              <span className=\"text-sm text-gray-400\">Actions Taken</span>\n            </div>\n            <div className=\"text-2xl font-bold text-cyan-400\">47</div>\n            <div className=\"text-xs text-gray-500\">Today</div>\n          </div>\n          \n          <div className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-4\">\n            <div className=\"flex items-center space-x-3 mb-2\">\n              <div className=\"w-3 h-3 bg-orange-400 rounded-full\"></div>\n              <span className=\"text-sm text-gray-400\">Cost Savings</span>\n            </div>\n            <div className=\"text-2xl font-bold text-orange-400\">â‚¹18.2L</div>\n            <div className=\"text-xs text-gray-500\">Daily reduction</div>\n          </div>\n        </div>\n\n        {/* Interactive Load Balancing and Model Performance */}\n        <div className=\"grid lg:grid-cols-3 gap-8 items-start\">\n          {/* Interactive Load Balancing Control */}\n          <div className=\"lg:col-span-2 bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6\">\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-bold text-white flex items-center mb-2\">\n                <div className=\"w-2 h-2 bg-cyan-400 rounded-full mr-3\"></div>\n                Interactive Load Balancing Control\n              </h3>\n              <p className=\"text-sm text-gray-400 bg-white/5 rounded-lg p-3 border-l-4 border-cyan-400\">\n                <strong>How it works:</strong> AI analyzes each grid zone and recommends optimal load adjustments. You can edit both the global target load and individual zone AI targets by hovering over the values and clicking the edit icon. Click \"Execute\" on any recommendation to apply changes instantly and view results in the performance analytics panel.\n              </p>\n            </div>\n            \n            {/* Current Grid Status Overview */}\n            <div className=\"mb-6 p-4 bg-cyan-500/10 border border-cyan-500/20 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h4 className=\"text-sm font-semibold text-cyan-400 flex items-center\">\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                  Grid Load Status\n                </h4>\n                <div className={`px-3 py-1 rounded-full text-xs font-bold flex items-center space-x-1 ${\n                  loadBalanceData.currentLoad >= loadBalanceData.targetLoad * 0.95 \n                    ? 'bg-green-500/20 text-green-400 border border-green-500/30' \n                    : loadBalanceData.currentLoad >= loadBalanceData.targetLoad * 0.85 \n                    ? 'bg-yellow-500/20 text-yellow-400 border border-yellow-500/30' \n                    : 'bg-red-500/20 text-red-400 border border-red-500/30'\n                }`}>\n                  {loadBalanceData.currentLoad >= loadBalanceData.targetLoad * 0.95 ? (\n                    <>\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      <span>OPTIMAL</span>\n                    </>\n                  ) : loadBalanceData.currentLoad >= loadBalanceData.targetLoad * 0.85 ? (\n                    <>\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.232 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                      </svg>\n                      <span>ADJUSTING</span>\n                    </>\n                  ) : (\n                    <>\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.232 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n                      </svg>\n                      <span>CRITICAL</span>\n                    </>\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-3 gap-4 mb-4\">\n                <div className=\"text-center p-3 bg-white/5 rounded-lg border border-white/10\">\n                  <div className=\"text-2xl font-bold text-cyan-400 mb-1\">{loadBalanceData.currentLoad}</div>\n                  <div className=\"text-xs text-gray-400\">Current Load</div>\n                  <div className=\"text-xs text-gray-500\">Megawatts (MW)</div>\n                </div>\n                <div className=\"text-center p-3 bg-white/5 rounded-lg border border-white/10 relative group\">\n                  {editingTarget ? (\n                    <div className=\"space-y-2\">\n                      <input\n                        type=\"number\"\n                        value={tempTargetLoad}\n                        onChange={(e) => setTempTargetLoad(parseInt(e.target.value))}\n                        className=\"w-full text-center text-xl font-bold bg-emerald-500/20 text-emerald-400 border border-emerald-500/50 rounded px-2 py-1\"\n                        min=\"1000\"\n                        max=\"5000\"\n                      />\n                      <div className=\"flex space-x-1\">\n                        <button\n                          onClick={handleTargetSave}\n                          className=\"flex-1 px-2 py-1 bg-emerald-500/30 text-emerald-400 rounded text-xs hover:bg-emerald-500/40\"\n                        >\n                          <svg className=\"w-3 h-3 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                          </svg>\n                        </button>\n                        <button\n                          onClick={handleTargetCancel}\n                          className=\"flex-1 px-2 py-1 bg-red-500/30 text-red-400 rounded text-xs hover:bg-red-500/40\"\n                        >\n                          <svg className=\"w-3 h-3 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                          </svg>\n                        </button>\n                      </div>\n                    </div>\n                  ) : (\n                    <>\n                      <div className=\"text-2xl font-bold text-emerald-400 mb-1\">{loadBalanceData.targetLoad}</div>\n                      <div className=\"text-xs text-gray-400\">Target Load</div>\n                      <div className=\"text-xs text-gray-500\">Megawatts (MW)</div>\n                      <button\n                        onClick={handleTargetEdit}\n                        className=\"absolute top-1 right-1 opacity-0 group-hover:opacity-100 transition-opacity p-1 bg-emerald-500/20 text-emerald-400 rounded hover:bg-emerald-500/30\"\n                      >\n                        <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                        </svg>\n                      </button>\n                    </>\n                  )}\n                </div>\n                <div className=\"text-center p-3 bg-white/5 rounded-lg border border-white/10\">\n                  <div className={`text-2xl font-bold mb-1 ${\n                    loadBalanceData.targetLoad - loadBalanceData.currentLoad > 0 ? 'text-orange-400' : 'text-green-400'\n                  }`}>\n                    {Math.abs(loadBalanceData.targetLoad - loadBalanceData.currentLoad)}\n                  </div>\n                  <div className=\"text-xs text-gray-400\">\n                    {loadBalanceData.targetLoad - loadBalanceData.currentLoad > 0 ? 'Needed' : 'Surplus'}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">Megawatts (MW)</div>\n                </div>\n              </div>\n\n              <div className=\"mb-3\">\n                <div className=\"flex items-center justify-between text-sm mb-2\">\n                  <span className=\"text-gray-300 flex items-center\">\n                    <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                    </svg>\n                    Grid Efficiency\n                  </span>\n                  <span className=\"font-bold text-white\">\n                    {((loadBalanceData.currentLoad / loadBalanceData.targetLoad) * 100).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-3 overflow-hidden\">\n                  <div \n                    className={`h-3 rounded-full transition-all duration-1000 ${\n                      loadBalanceData.currentLoad >= loadBalanceData.targetLoad * 0.95 \n                        ? 'bg-gradient-to-r from-green-400 to-emerald-500' \n                        : loadBalanceData.currentLoad >= loadBalanceData.targetLoad * 0.85 \n                        ? 'bg-gradient-to-r from-yellow-400 to-orange-500' \n                        : 'bg-gradient-to-r from-red-400 to-red-600'\n                    }`}\n                    style={{ width: `${Math.min(100, (loadBalanceData.currentLoad / loadBalanceData.targetLoad) * 100)}%` }}\n                  ></div>\n                </div>\n              </div>\n              \n              <div className=\"text-xs text-gray-400 bg-white/5 rounded-lg p-3 border-l-2 border-cyan-400\">\n                <div className=\"flex items-start\">\n                  <svg className=\"w-4 h-4 mr-2 mt-0.5 text-cyan-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <div>\n                    <strong>Status Explanation:</strong> {\n                      loadBalanceData.currentLoad >= loadBalanceData.targetLoad * 0.95 \n                        ? 'Grid is operating at optimal efficiency. All zones are well-balanced with minimal adjustments needed.' \n                        : loadBalanceData.currentLoad >= loadBalanceData.targetLoad * 0.85 \n                        ? 'Grid load is below optimal target. Execute AI recommendations below to improve efficiency and balance.' \n                        : 'Critical load shortage detected. Immediate load balancing required to prevent grid instability.'\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Zone-wise Load Balancing Recommendations */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h4 className=\"text-sm font-semibold text-gray-300 flex items-center\">\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 00-2 2v2a2 2 0 002 2m0 0h14m-14 0a2 2 0 002 2v2a2 2 0 01-2 2M5 9V7a2 2 0 012-2h2a2 2 0 012 2v2M5 9V7a2 2 0 012-2h2a2 2 0 012 2v2\" />\n                  </svg>\n                  AI Recommendations by Grid Zone\n                </h4>\n                <div className=\"text-xs text-gray-500 bg-white/5 rounded px-2 py-1\">\n                  {loadBalanceData.recommendations.filter(r => r.status === 'pending').length} Actions Available\n                </div>\n              </div>\n              <div className=\"text-xs text-gray-400 bg-blue-500/10 border border-blue-500/20 rounded-lg p-3 mb-4\">\n                <div className=\"flex items-start\">\n                  <svg className=\"w-4 h-4 mr-2 mt-0.5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                  <div>\n                    <strong>How to use:</strong> Each zone shows current load vs AI-recommended optimal load. You can customize AI targets by hovering over the \"AI Target\" value and clicking the edit icon. Higher priority actions have greater impact on grid efficiency. Click \"Execute\" to apply the recommendation and see real-time results.\n                  </div>\n                </div>\n              </div>\n              \n              {loadBalanceData.recommendations.map((rec) => (\n                <div key={rec.id} className={`p-5 rounded-lg border transition-all duration-200 ${\n                  selectedAction === `load-${rec.id}` \n                    ? 'bg-purple-500/20 border-purple-500/40 shadow-lg' \n                    : 'bg-white/5 border-white/10 hover:bg-white/10 hover:border-white/20'\n                }`}>\n                  {/* Zone Header */}\n                  <div className=\"flex items-center justify-between mb-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-4 h-4 rounded-full flex items-center justify-center ${\n                        rec.priority === 'High' ? 'bg-red-400' : \n                        rec.priority === 'Medium' ? 'bg-yellow-400' : 'bg-green-400'\n                      }`}>\n                        <div className=\"w-2 h-2 bg-white rounded-full\"></div>\n                      </div>\n                      <div>\n                        <h5 className=\"font-bold text-white text-lg\">{rec.zone}</h5>\n                        <div className=\"text-xs text-gray-400\">Grid Zone Optimization</div>\n                      </div>\n                    </div>\n                    <div className=\"text-right space-y-1\">\n                      <div className={`text-xs px-3 py-1 rounded-full font-bold ${\n                        rec.priority === 'High' ? 'bg-red-500/20 text-red-400 border border-red-500/30' :\n                        rec.priority === 'Medium' ? 'bg-yellow-500/20 text-yellow-400 border border-yellow-500/30' : \n                        'bg-green-500/20 text-green-400 border border-green-500/30'\n                      }`}>\n                        {rec.priority} Priority\n                      </div>\n                      <div className={`text-xs px-2 py-1 rounded flex items-center space-x-1 ${\n                        rec.status === 'pending' ? 'bg-gray-500/20 text-gray-400' :\n                        rec.status === 'executing' ? 'bg-blue-500/20 text-blue-400' :\n                        rec.status === 'completed' ? 'bg-green-500/20 text-green-400' :\n                        'bg-red-500/20 text-red-400'\n                      }`}>\n                        {rec.status === 'pending' ? (\n                          <>\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                            <span>READY</span>\n                          </>\n                        ) : rec.status === 'executing' ? (\n                          <>\n                            <svg className=\"w-3 h-3 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                            </svg>\n                            <span>EXECUTING</span>\n                          </>\n                        ) : rec.status === 'completed' ? (\n                          <>\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                            </svg>\n                            <span>COMPLETED</span>\n                          </>\n                        ) : (\n                          <>\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                            <span>FAILED</span>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Load Information */}\n                  <div className=\"grid grid-cols-3 gap-4 mb-4\">\n                    <div className=\"text-center p-3 bg-white/5 rounded-lg border border-white/10\">\n                      <div className=\"text-xs text-gray-400 mb-1\">Current Load</div>\n                      <div className=\"text-xl font-bold text-white\">{rec.currentLoad}</div>\n                      <div className=\"text-xs text-gray-500\">MW</div>\n                    </div>\n                    <div className=\"text-center p-3 bg-cyan-500/10 rounded-lg border border-cyan-500/20 relative group\">\n                      {editingZone === rec.id ? (\n                        <div className=\"space-y-2\">\n                          <div className=\"text-xs text-gray-400 mb-1\">AI Target</div>\n                          <input\n                            type=\"number\"\n                            value={tempZoneLoad}\n                            onChange={(e) => setTempZoneLoad(parseInt(e.target.value))}\n                            className=\"w-full text-center text-lg font-bold bg-cyan-500/20 text-cyan-400 border border-cyan-500/50 rounded px-2 py-1\"\n                            min=\"100\"\n                            max=\"1500\"\n                          />\n                          <div className=\"flex space-x-1\">\n                            <button\n                              onClick={() => handleZoneSave(rec.id)}\n                              className=\"flex-1 px-2 py-1 bg-emerald-500/30 text-emerald-400 rounded text-xs hover:bg-emerald-500/40\"\n                            >\n                              <svg className=\"w-3 h-3 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                              </svg>\n                            </button>\n                            <button\n                              onClick={handleZoneCancel}\n                              className=\"flex-1 px-2 py-1 bg-red-500/30 text-red-400 rounded text-xs hover:bg-red-500/40\"\n                            >\n                              <svg className=\"w-3 h-3 mx-auto\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                              </svg>\n                            </button>\n                          </div>\n                        </div>\n                      ) : (\n                        <>\n                          <div className=\"text-xs text-gray-400 mb-1\">AI Target</div>\n                          <div className=\"text-xl font-bold text-cyan-400\">{rec.recommendedLoad}</div>\n                          <div className=\"text-xs text-gray-500\">MW</div>\n                          <button\n                            onClick={() => handleZoneEdit(rec.id, rec.recommendedLoad)}\n                            disabled={rec.status === 'executing' || rec.status === 'completed'}\n                            className={`absolute top-1 right-1 opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded ${\n                              rec.status === 'pending' \n                                ? 'bg-cyan-500/20 text-cyan-400 hover:bg-cyan-500/30' \n                                : 'bg-gray-500/20 text-gray-500 cursor-not-allowed'\n                            }`}\n                          >\n                            <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                            </svg>\n                          </button>\n                        </>\n                      )}\n                    </div>\n                    <div className=\"text-center p-3 bg-white/5 rounded-lg border border-white/10\">\n                      <div className=\"text-xs text-gray-400 mb-1\">Change Needed</div>\n                      <div className={`text-xl font-bold ${\n                        rec.recommendedLoad > rec.currentLoad ? 'text-emerald-400' : 'text-orange-400'\n                      }`}>\n                        {rec.recommendedLoad > rec.currentLoad ? '+' : ''}{rec.recommendedLoad - rec.currentLoad}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">MW</div>\n                    </div>\n                  </div>\n\n                  {/* Impact and Explanation */}\n                  <div className=\"mb-4 p-3 bg-white/5 rounded-lg border-l-4 border-cyan-400\">\n                    <div className=\"text-xs text-gray-400\">\n                      <strong>AI Analysis:</strong> {\n                        rec.priority === 'High' \n                          ? `Critical adjustment needed. This zone is ${rec.recommendedLoad > rec.currentLoad ? 'under' : 'over'}loaded and requires immediate balancing to prevent grid instability.`\n                          : rec.priority === 'Medium'\n                          ? `Moderate optimization opportunity. Adjusting this zone will improve overall grid efficiency by ${Math.abs((rec.recommendedLoad - rec.currentLoad) / rec.currentLoad * 100).toFixed(1)}%.`\n                          : `Minor optimization available. Small adjustment will contribute to overall grid balance and efficiency.`\n                      }\n                    </div>\n                    <div className=\"flex items-center justify-between mt-2 text-xs\">\n                      <span className=\"text-gray-500\">\n                        Expected Impact: {rec.priority === 'High' ? 'Major' : rec.priority === 'Medium' ? 'Moderate' : 'Minor'} efficiency gain\n                      </span>\n                      <span className=\"text-cyan-400\">\n                        Est. Time: {Math.abs(rec.recommendedLoad - rec.currentLoad) > 50 ? '3-5' : '1-3'} min\n                      </span>\n                    </div>\n                  </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      <button\n                        onClick={() => setSelectedAction(selectedAction === `load-${rec.id}` ? null : `load-${rec.id}`)}\n                        disabled={rec.status === 'executing' || rec.status === 'completed'}\n                        className={`px-4 py-2 rounded-lg text-sm font-medium transition-all ${\n                          selectedAction === `load-${rec.id}`\n                            ? 'bg-purple-500/30 text-purple-400 border border-purple-500/50 shadow-lg'\n                            : rec.status === 'pending'\n                            ? 'bg-white/10 text-gray-300 hover:bg-white/20 hover:text-white border border-white/20'\n                            : 'bg-gray-500/20 text-gray-500 cursor-not-allowed border border-gray-500/20'\n                        }`}\n                      >\n                        {rec.status === 'pending' ? (\n                          selectedAction === `load-${rec.id}` ? (\n                            <div className=\"flex items-center space-x-1\">\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                              </svg>\n                              <span>Selected</span>\n                            </div>\n                          ) : (\n                            'Select Action'\n                          )\n                        ) : rec.status === 'executing' ? (\n                          <div className=\"flex items-center space-x-1\">\n                            <svg className=\"w-4 h-4 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n                            </svg>\n                            <span>Executing...</span>\n                          </div>\n                        ) : rec.status === 'completed' ? (\n                          <div className=\"flex items-center space-x-1\">\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                            </svg>\n                            <span>Completed</span>\n                          </div>\n                        ) : (\n                          <div className=\"flex items-center space-x-1\">\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                            <span>Failed</span>\n                          </div>\n                        )}\n                      </button>\n                      \n                      {selectedAction === `load-${rec.id}` && rec.status === 'pending' && (\n                        <button\n                          onClick={() => executeLoadBalancing(rec.id)}\n                          disabled={executingAction === `load-${rec.id}`}\n                          className={`px-6 py-2 rounded-lg text-sm font-bold transition-all flex items-center space-x-2 ${\n                            executingAction === `load-${rec.id}`\n                              ? 'bg-blue-500/30 text-blue-400 cursor-not-allowed border border-blue-500/50'\n                              : 'bg-emerald-500/30 text-emerald-400 hover:bg-emerald-500/40 hover:text-emerald-300 border border-emerald-500/50 hover:border-emerald-500/70 shadow-lg hover:shadow-emerald-500/20'\n                          }`}\n                        >\n                          {executingAction === `load-${rec.id}` ? 'Executing...' : 'Execute'}\n                        </button>\n                      )}\n                    </div>\n                    \n                    <div className=\"text-xs text-gray-500 flex items-center\">\n                      <svg className=\"w-3 h-3 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      Estimated completion: {Math.abs(rec.recommendedLoad - rec.currentLoad) > 50 ? '3-5' : '1-3'} minutes\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Bulk Load Balancing Operations */}\n            <div className=\"mt-8 p-5 bg-purple-500/10 border border-purple-500/20 rounded-xl\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div>\n                  <h4 className=\"text-sm font-bold text-purple-400 flex items-center mb-1\">\n                    <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                    </svg>\n                    Bulk Operations\n                  </h4>\n                  <div className=\"text-xs text-gray-400\">Execute multiple recommendations simultaneously for faster grid optimization</div>\n                </div>\n                <div className=\"text-xs text-gray-500 bg-white/5 rounded px-2 py-1\">\n                  {loadBalanceData.recommendations.filter(r => r.priority === 'High' && r.status === 'pending').length} High Priority Available\n                </div>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"p-4 bg-white/5 rounded-lg border border-white/10\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div>\n                      <div className=\"text-sm font-semibold text-emerald-400\">Execute Critical Actions</div>\n                      <div className=\"text-xs text-gray-400\">Run all high priority recommendations</div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-lg font-bold text-emerald-400\">\n                        {loadBalanceData.recommendations.filter(r => r.priority === 'High' && r.status === 'pending').length}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">Actions</div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => executeAllHighPriority()}\n                    disabled={loadBalanceData.recommendations.filter(r => r.priority === 'High' && r.status === 'pending').length === 0}\n                    className={`w-full px-4 py-2 rounded-lg text-sm font-bold transition-all ${\n                      loadBalanceData.recommendations.filter(r => r.priority === 'High' && r.status === 'pending').length > 0\n                        ? 'bg-emerald-500/30 text-emerald-400 hover:bg-emerald-500/40 border border-emerald-500/50 hover:shadow-lg hover:shadow-emerald-500/20'\n                        : 'bg-gray-500/20 text-gray-500 cursor-not-allowed border border-gray-500/20'\n                    }`}\n                  >\n                    {loadBalanceData.recommendations.filter(r => r.priority === 'High' && r.status === 'pending').length > 0 ? (\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                        </svg>\n                        <span>Execute {loadBalanceData.recommendations.filter(r => r.priority === 'High' && r.status === 'pending').length} Critical Actions</span>\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                        </svg>\n                        <span>No Critical Actions Pending</span>\n                      </div>\n                    )}\n                  </button>\n                </div>\n\n                <div className=\"p-4 bg-white/5 rounded-lg border border-white/10\">\n                  <div className=\"flex items-center justify-between mb-3\">\n                    <div>\n                      <div className=\"text-sm font-semibold text-cyan-400\">Simulate All Changes</div>\n                      <div className=\"text-xs text-gray-400\">Preview impact without executing</div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-lg font-bold text-cyan-400\">\n                        {loadBalanceData.recommendations.filter(r => r.status === 'pending').length}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">Total</div>\n                    </div>\n                  </div>\n                  <button\n                    onClick={() => simulateLoadBalancing()}\n                    className=\"w-full px-4 py-2 bg-cyan-500/30 text-cyan-400 hover:bg-cyan-500/40 rounded-lg text-sm font-bold transition-all border border-cyan-500/50 hover:shadow-lg hover:shadow-cyan-500/20 flex items-center justify-center space-x-2\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                    </svg>\n                    <span>Preview All Changes</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Model Performance Analytics */}\n          <div className=\"bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-6\">\n            <div className=\"mb-6\">\n              <h3 className=\"text-lg font-bold text-white flex items-center mb-2\">\n                <svg className=\"w-5 h-5 mr-3 text-emerald-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                AI Model Performance Analytics\n              </h3>\n              <p className=\"text-xs text-gray-400\">\n                Real-time performance tracking of the PPO reinforcement learning model optimizing grid operations\n              </p>\n            </div>\n            \n            {/* Model Status Banner */}\n            <div className={`mb-6 p-4 rounded-lg border ${\n              modelMetrics.successRate > 85 \n                ? 'bg-green-500/10 border-green-500/30' \n                : modelMetrics.successRate > 70 \n                ? 'bg-yellow-500/10 border-yellow-500/30' \n                : 'bg-blue-500/10 border-blue-500/30'\n            }`}>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-3 h-3 rounded-full animate-pulse ${\n                    modelMetrics.successRate > 85 ? 'bg-green-400' : \n                    modelMetrics.successRate > 70 ? 'bg-yellow-400' : 'bg-blue-400'\n                  }`}></div>\n                  <div>\n                    <div className={`text-sm font-bold ${\n                      modelMetrics.successRate > 85 ? 'text-green-400' : \n                      modelMetrics.successRate > 70 ? 'text-yellow-400' : 'text-blue-400'\n                    }`}>\n                      Model Status: {modelMetrics.successRate > 85 ? 'Optimal Performance' : modelMetrics.successRate > 70 ? 'Good Performance' : 'Active Learning'}\n                    </div>\n                    <div className=\"text-xs text-gray-400\">\n                      {modelMetrics.successRate > 85 \n                        ? 'AI model is performing exceptionally well with high success rates'\n                        : modelMetrics.successRate > 70 \n                        ? 'AI model is performing well and continuing to optimize'\n                        : 'AI model is actively learning and improving from each execution'\n                      }\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className={`text-xl font-bold ${\n                    modelMetrics.successRate > 85 ? 'text-green-400' : \n                    modelMetrics.successRate > 70 ? 'text-yellow-400' : 'text-blue-400'\n                  }`}>\n                    {modelMetrics.successRate.toFixed(1)}%\n                  </div>\n                  <div className=\"text-xs text-gray-500\">Success Rate</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Key Performance Metrics */}\n            <div className=\"mb-6\">\n              <h4 className=\"text-sm font-semibold text-gray-300 mb-4 flex items-center\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n                Core Performance Indicators\n              </h4>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"p-4 bg-white/5 rounded-lg border border-white/10\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <svg className=\"w-4 h-4 text-cyan-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                      <span className=\"text-xs text-gray-400\">Policy Loss</span>\n                    </div>\n                    <div className=\"text-lg font-bold text-cyan-400\">{modelMetrics.policyLoss.toFixed(3)}</div>\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    Lower is better â€¢ Measures decision quality\n                  </div>\n                </div>\n\n                <div className=\"p-4 bg-white/5 rounded-lg border border-white/10\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <svg className=\"w-4 h-4 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z\" />\n                      </svg>\n                      <span className=\"text-xs text-gray-400\">Value Loss</span>\n                    </div>\n                    <div className=\"text-lg font-bold text-blue-400\">{modelMetrics.valueLoss.toFixed(3)}</div>\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    Lower is better â€¢ Measures prediction accuracy\n                  </div>\n                </div>\n\n                <div className=\"p-4 bg-white/5 rounded-lg border border-white/10\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <svg className=\"w-4 h-4 text-green-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      <span className=\"text-xs text-gray-400\">Actions Executed</span>\n                    </div>\n                    <div className=\"text-lg font-bold text-green-400\">{modelMetrics.totalExecutions}</div>\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {modelMetrics.successfulExecutions} successful â€¢ {modelMetrics.totalExecutions - modelMetrics.successfulExecutions} failed\n                  </div>\n                </div>\n\n                <div className=\"p-4 bg-white/5 rounded-lg border border-white/10\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <svg className=\"w-4 h-4 text-emerald-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                      </svg>\n                      <span className=\"text-xs text-gray-400\">Reward Gained</span>\n                    </div>\n                    <div className=\"text-lg font-bold text-emerald-400\">+{modelMetrics.totalRewardGain.toFixed(3)}</div>\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    Cumulative optimization benefit\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Execution History */}\n            <div className=\"mb-6\">\n              <h4 className=\"text-sm font-semibold text-gray-300 mb-3 flex items-center\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                Recent Execution History\n                <span className=\"ml-2 text-xs text-gray-500 bg-white/5 rounded px-2 py-1\">\n                  Last 5 Actions\n                </span>\n              </h4>\n              \n              {executionHistory.length === 0 ? (\n                <div className=\"text-center py-8 bg-white/5 rounded-lg border border-white/10\">\n                  <svg className=\"w-8 h-8 text-gray-500 mx-auto mb-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n                  </svg>\n                  <div className=\"text-sm text-gray-500\">No executions yet</div>\n                  <div className=\"text-xs text-gray-600\">Execute actions above to see performance data</div>\n                </div>\n              ) : (\n                <div className=\"space-y-3 max-h-40 overflow-y-auto\">\n                  {executionHistory.slice(-5).reverse().map((execution, index) => (\n                    <div key={`${execution.id}-${execution.timestamp.getTime()}`} className={`p-3 rounded-lg border transition-all ${\n                      execution.success \n                        ? 'bg-green-500/10 border-green-500/20 hover:bg-green-500/15' \n                        : 'bg-red-500/10 border-red-500/20 hover:bg-red-500/15'\n                    }`}>\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className={`w-2 h-2 rounded-full ${execution.success ? 'bg-green-400' : 'bg-red-400'}`}></div>\n                          <span className=\"font-medium text-white text-sm\">{execution.zone}</span>\n                          <span className=\"text-xs text-gray-500\">\n                            {execution.timestamp.toLocaleTimeString()}\n                          </span>\n                        </div>\n                        <div className={`px-2 py-1 rounded text-xs font-bold ${\n                          execution.success ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'\n                        }`}>\n                          {execution.success ? 'SUCCESS' : 'FAILED'}\n                        </div>\n                      </div>\n                      <div className=\"flex items-center justify-between text-xs\">\n                        <span className=\"text-gray-400\">\n                          Load Change: <span className=\"font-medium text-white\">\n                            {execution.loadChange > 0 ? '+' : ''}{execution.loadChange} MW\n                          </span>\n                        </span>\n                        <span className={`font-bold ${execution.rewardImpact > 0 ? 'text-emerald-400' : 'text-red-400'}`}>\n                          Reward: {execution.rewardImpact > 0 ? '+' : ''}{execution.rewardImpact.toFixed(3)}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Learning Progress */}\n            <div className=\"p-4 bg-purple-500/10 border border-purple-500/20 rounded-lg\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h4 className=\"text-sm font-semibold text-purple-400 flex items-center\">\n                  <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                  </svg>\n                  Learning Progress\n                </h4>\n                <div className=\"text-xs text-gray-500\">PPO Algorithm</div>\n              </div>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between text-xs\">\n                  <span className=\"text-gray-400\">Model Confidence</span>\n                  <span className=\"text-purple-400 font-bold\">{(modelMetrics.successRate).toFixed(1)}%</span>\n                </div>\n                <div className=\"w-full bg-gray-800 rounded-full h-2\">\n                  <div \n                    className=\"bg-gradient-to-r from-purple-400 to-emerald-400 h-2 rounded-full transition-all duration-1000\"\n                    style={{ width: `${modelMetrics.successRate}%` }}\n                  ></div>\n                </div>\n                <div className=\"text-xs text-gray-500 text-center\">\n                  {modelMetrics.totalExecutions === 0 \n                    ? 'Ready to learn from your first execution'\n                    : `Actively learning from ${modelMetrics.totalExecutions} executed actions`\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}